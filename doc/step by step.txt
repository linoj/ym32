## ---------------
## Rebuild for Rails 3.2

$ rvm use 1.9.3
$ rails new ym32 -T 

.rvmrc
  rvm use 1.9.2
  
create db
$ rake db:migrate

## ---------------
## git

$ git init
$ git add .
$ commit -am "first commit"
create repos on github
$ git remote add origin git@github.com:linoj/ym32.git
$ git push -u origin master


## ---------------
## haml and simple_form

Gemfile
    gem 'haml-rails'
    gem 'simple_form'
    
$ bundle
$ rails g simple_form:install

$ rails g scaffold
=> Template engine: Default: haml
   Fixture replacement: Default: factory_girl
   Form builder: Default: simple_form
  
## ---------------
## rspec

Gemfile
    group :test, :development do
      gem 'ruby-debug19', :require => 'ruby-debug'
      gem "rspec-rails"
      gem 'rspec-instafail'
      gem 'factory_girl_rails'
      gem 'database_cleaner'
      gem "capybara"
    end
    
$ bundle install
$ rails g rspec:install
FAILS

http://stackoverflow.com/questions/8087610/ruby-debug-with-ruby-1-9-3
$ bundle config build.ruby-debug-base19 --with-ruby-include=$rvm_path/src/ruby-1.9.3-p125

Gemfile
    # official unofficial ruby-debug19 fix
    # with the same gems as mentioned in 
    # https://gist.github.com/1333785
    source 'https://gems.gemfury.com/8n1rdTK8pezvcsyVmmgJ/' 
    group :test, :development do
      gem 'linecache19',       '>= 0.5.13'
      gem 'ruby-debug-base19', '>= 0.11.26'
      gem 'ruby-debug19'
    end
    
$ rails g rspec:install
$ rake spec
=> 0 examples, 0 failures

## ---------------
## pages
create manually

routes.rb
    match 'about' => 'pages#about'
    root :to => 'pages#home'
    
$ rm public/index.html

app/controllers/pages_controller.rb
    class PagesController < ApplicationController
      def home
        render
      end
      def about
        render
      end
    end

app/views/pages/home.html.haml
    %h1 Home
    %p Welcome to YahrzeitMinder.com
    
app/views/pages/about.html.haml
    %h1 About
    %p (TBD)
    
spec/requests/pages_spec.rb
    require 'spec_helper'

    describe "Pages", :type => :request do
      describe "GET /" do
        it "is on the home page" do
          visit '/'
          current_path.should == '/'
        end
      end
      describe "GET /about" do
        it "is on the About page" do
          visit '/about'
          current_path.should == '/about'
        end
      end
    end

$ rails s
OK

## ---------------
## heroku

Gemfile
    gem 'heroku'
    group :development, :test do
      gem 'sqlite3'
    end
    group :production do
      gem 'thin'
      gem 'pg'
    end
    
$ bundle install --without production

$ heroku create --stack cedar
=> Creating falling-dusk-9165... done, stack is cedar
$ heroku apps:rename ym32

for heroku to compile assets
    edit config/application.rb
      if defined?(Bundler)
        # If you precompile assets before deploying to production, use this line
        #Bundler.require(*Rails.groups(:assets => %w(development test)))
        # If you want your assets lazily compiled in production, use this line
        Bundler.require(:default, :assets, Rails.env)
      end
    and
      # ref: http://devcenter.heroku.com/articles/rails3x-asset-pipeline-cedar
      config.assets.initialize_on_precompile = false


first deploy
  $ git add .
  $ git commit -am "with pages"
  $ git push heroku master
  $ heroku run rake db:migrate
  $ heroku open
  

## ---------------
## layout

views/layouts/application.html.haml (replace .erb)

helpers/application_helper.rb
    def title(page_title, show_title = true)
      content_for(:title) { h(page_title.to_s) }
      @show_title = show_title
    end

    def show_title?
      @show_title
    end
    
app/views/pages/home.html.haml
    - title "Home"
    
app/views/pages/about.html.haml
    - title "About"
    
## ---------------
## twitter bootstrap
(walking thru RailsCast from LESS to Sass)

Gemfile
    gem 'twitter-bootstrap-rails'

$ rails g bootstrap:install

edit layouts/application.html.haml
  - add navbar
  - containers for header,content, footer
  - flash message with css and close button
  
simple_form (again)
  $ rails g simple_form:install --bootstrap
=>
      Inside your views, use the 'simple_form_for' with one of the Bootstrap form
      classes, '.form-horizontal', '.form-inline', '.form-search' or
      '.form-vertical', as the following:

        = simple_form_for(@user, :html => {:class => 'form-horizontal' }) do |form|

tweaks to simple_form for bootstrap
  https://github.com/plataformatec/simple_form/wiki/Twitter-Bootstrap-v2-and-simple_form-v2
  config/initializers/simple_form.rb
      config.form_class = 'simple_form form-horizontal'
  lib/extras/simple_form_extension.rb
      ...see wiki
  config/application.rb
      config.autoload_paths += %W(#{config.root}/lib/extras)
  config/locales/simple_form.en.yml
      ...
  views/people/_form.html.haml
      replace f.button :submit with
      = f.button :wrapped, :cancel => people_path
      

using sass instead of less
  Gemfile
      gem 'bootstrap-sass'
  rename bootstrap_and_overrides.css.less file to end in .scss
    and edit for sass
  application.js
  remove javascripts/bootstrap.js.coffee
  

re-deploy
  $ git add .
  $ git commit -am "added twitter bootstrap"
  $ git push heroku
  

## ---------------
## people

$ rails g scaffold person last_name first_name middle_name maiden prefix suffix gender birth_date:date death_date:date death_hebrew_date_day:integer death_hebrew_date_month:integer death_hebrew_date_year:integer death_after_sunset:boolean --skip-stylesheets

$ rake db:migrate
$ rails s
$ rake spec

specs for people
  Gemfile
      gem 'faker'
  spec/factories/people.rb
  app/models/person.rb
  spec/support/random_date.rb
  spec/support/shared_examples.rb
      
etc. etc.

## ---------------
## table view

temporarily restore 'twitter-bootstrap-rails' for its generator  
  
TODO
table view
table sort
authentication login authorization
calculator


## ---------------
## TODO client side validations
(compatibility errors with simple_form 2.0 + bootstrap + client_side_validations)
ref: https://github.com/seivan/client_side_validations-simple_form
ref: https://github.com/rafaelfranca/simple_form-bootstrap/issues/4

client side validations
    gem 'client_side_validations'
    $ rails g client_side_validations:install
    
    In your app/assets/javascripts/application.js file add the following:
    //= require rails.validations
    
    Uncomment code in initializes/client_side_validations.rb
    
    rspec examples with :js => true

custom validations for proper name
    https://github.com/bcardarella/client_side_validations/wiki/Custom-Validators
    initializers/proper_name_validations.rb
    config/locales/en.yml
    app/assets/javascripts/rails.validations.custom.js





## ---------------
## 
## ---------------
## 
## ---------------
## 
## ---------------
## 

